# Le decimos a Caddy que estamos manejando HTTP internamente.
# Railway se encargará del HTTPS para el dominio público.
{
	auto_https off
}

# La variable PORT la define Railway (la hemos puesto en 80).
# Si no, Caddy escucharía en el 443 por defecto.
:{$PORT} {
	# --- Manejo explícito de Preflight CORS ---
	# Esto intercepta TODAS las solicitudes OPTIONS y responde directamente.
	# Es la forma más robusta de manejar CORS.
	@options method OPTIONS
	handle @options {
		header {
			Access-Control-Allow-Origin "{$ENV_WEB_ORIGIN}"
			Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS"
			Access-Control-Allow-Headers "*"
			Access-Control-Allow-Credentials "true"
			Access-Control-Max-Age "86400"
		}
		respond 204
	}

	# --- Manejadores de Proxy ---
	# Movemos los manejadores de proxy dentro de un bloque 'handle' general
	# para que no interfieran con el manejo de OPTIONS.
	handle {
		# REGLA 1: Manejar la ruta de verificación.
		handle /verify {
			reverse_proxy {$ENV_GOTRUE}:{$ENV_GOTRUE_PORT} {
				header_up X-Forwarded-Proto "https"
				header_up X-Forwarded-Host "{host}"
			}
		}

		# REGLA 2: Manejar la API de GoTrue.
		handle /gotrue/* {
			uri strip_prefix /gotrue
			reverse_proxy {$ENV_GOTRUE}:{$ENV_GOTRUE_PORT} {
				header_up X-Forwarded-Proto "https"
				header_up X-Forwarded-Host "{host}"
			}
		}

		# REGLA 3: Manejar la API de Minio.
		handle /minio-api/* {
			reverse_proxy {$ENV_MINIO}:{$ENV_MINIO_PORT}
		}

		# REGLA 4: Manejar WebSockets.
		handle /ws/* {
			reverse_proxy {$ENV_APPFLOWY_CLOUD}:{$ENV_APPFLOWY_CLOUD_PORT}
		}

		# REGLA 5: La regla por defecto para el backend principal.
		handle {
			reverse_proxy {$ENV_APPFLOWY_CLOUD}:{$ENV_APPFLOWY_CLOUD_PORT}
		}
	}

	# --- Cabeceras Globales de Respuesta ---
	# Se aplican a todas las respuestas que SÍ pasan por el proxy.
	header {
		Access-Control-Allow-Origin "{$ENV_WEB_ORIGIN}"
		Access-Control-Allow-Credentials "true"
	}
} 